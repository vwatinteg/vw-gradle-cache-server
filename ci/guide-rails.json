{
	"metadata": {
		"version": 1
	},
	"application": {
		"name": "vw-gradle-cache-server",
		"language": "JAVA_GRADLE",
		"artifact_store": {
			"repositories": null
		}
	},
	"pipeline": {
		"segments": [
			{
				"name": "Build",
				"segment_type": "build",
				"exit_actions": {},
				"properties": [
					{
						"name": "gradle.user.home",
						"description": "GRADLE_USER_HOME is set to ${SEGMENT_BASE_DIR}/cache/.gradle by default, when caching is enabled. Caches are maintained on the worker where your build gets allocated. For a new worker assigned to the build, the cache will be re-created",
						"value": "${SEGMENT_BASE_DIR}/cache/.gradle"
					},
					{
						"name": "ivy.defaultCacheDir",
						"description": "ivy cache directory is set to ${SEGMENT_BASE_DIR}/cache/.ivy by default, when caching is enabled. Caches are maintained on the worker where your build gets allocated. For a new worker assigned to the build, the cache will be re-created",
						"value": "${SEGMENT_BASE_DIR}/cache/.ivy"
					},
					{
						"name": "maven.repo.local",
						"description": "maven local repository is set to ${SEGMENT_BASE_DIR}/cache/.m2 by default, when caching is enabled. Caches are maintained on the worker where your build gets allocated. For a new worker assigned to the build, the cache will be re-created",
						"value": "${SEGMENT_BASE_DIR}/cache/.m2"
					}
				],
				"deployment_strategy": {},
				"application_init": {},
				"instance_tags": [
					{
						"name": "application.name",
						"value": "((application.name))"
					}
				],
				"cache_info": {
					"paths": [
						"((gradle.user.home))",
						"((ivy.defaultCacheDir))",
						"((maven.repo.local))"
					]
				},
				"tasks": [
					{
						"name": "vw-gradle-cache-server",
						"steps": [
							{
								"name": "build",
								"definition": "build",
								"command": "gradle build",
								"properties": null
							}
						],
						"docker_options": {}
					}
				]
			}
		],
		"exit_actions": {},
		"default_properties": [
			{
				"name": "gr.whitesource.opensource.scan",
				"value": false,
				"type": "boolean"
			},
			{
				"name": "gr.codeql.run.scan",
				"value": false,
				"type": "boolean"
			}
		],
		"deployment_files": [],
		"application_init": {
			"command": "bin/start-service.sh"
		},
		"releases": [
			{
				"name": "consul",
				"version": "latest"
			}
		]
	},
	"organization": {
		"orgname": "GR-Product"
	}
}